# a model for deploying an irrigation app that requires some sensors and an
# actuator and passes the crop type from the user as an argument

@prefix case: <http://matus.tomlein.org/case/>.
@prefix local: <http://102.12.124.12/>.
@prefix dbpedia: <http://dbpedia.org/resource/>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.

local:cropType a case:Question;
  case:text "What is the crop type?";
  case:options ( "Cereals" "Soya" "Wine" );
  case:replyType case:Select.

local:app a case:Application;
  case:name "Irrigator";
  case:description "An app for irrigating fields of various crops".

local:devicesReq a case:Requirement;
  case:description "Irrigator and sensors needed".

{
  ?irrigator a case:Irrigator; case:irrigatorType case:centralPivot.
  ?moistureSensor a case:Sensor; case:sensorType case:moistureSensor.
  ?phSensor a case:Sensor; case:sensorType case:phSensor.
} => {
  local:devicesReq case:satisfied true.

  [ case:storedMatchedDevices
    ( ?irrigator ?moistureSensor ?phSensor) ].
}.

{
  local:devicesReq case:satisfied true.
  [ case:storedMatchedDevices
    ( ?irrigator ?moistureSensor ?phSensor) ].

  [ case:answers local:cropType; case:selected ?cropType ].
} => {
  local:app case:hasDeploymentPlan [
    a case:DeploymentPlan;
      case:description "Using irrigator, moisture and Ph sensor";
      case:arguments (
        ?cropType ?irrigator
        ?moistureSensor ?phSensor
      );
      case:capabilities (
        [ a case:Irrigation;
            case:description "Field irrigation";
            case:cropType ?cropType;
            case:actuator ?irrigator;
            case:sensor ?moistureSensor;
            case:sensor ?phSensor ]
      );
      case:requires (
        [ a case:ControlPermission; case:for ?irrigator ]
        [ a case:ReadPermission; case:for ?moistureSensor ]
        [ a case:ReadPermission; case:for ?phSensor ]
      )
  ].
}.
